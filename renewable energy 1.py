# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Lv6kj-pkdjFp7jgM6TEfZzLK8crMYLPa
"""

# Commented out IPython magic to ensure Python compatibility.
import time
from datetime import datetime
import random
import pandas as pd
import numpy as np
import sqlite3
import requests
from sklearn.metrics import mean_squared_error
from statsmodels.tools.eval_measures import rmse
import warnings
warnings.filterwarnings("ignore")
import matplotlib.pyplot as plt
# %matplotlib inline
import tensorflow  as tf
import matplotlib.pyplot as plt
from tensorflow import keras

df1= pd.read_csv("/content/ninja_pv_wind_profiles_singleindex.csv")
df2= pd.read_csv("/content/weather_data.csv")
df3= pd.read_csv("/content/Final Merged.csv")

df3

from sklearn.model_selection import train_test_split
X = df3.drop(['NL_wind_national_long-termfuture','time'],axis=1)
y = df3['NL_wind_national_long-termfuture']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=101)

y_train

y_train.shape

y_train = y_train.reshape((y_train.shape[0], 1, x_train.shape[1]))
y_test = y_test.reshape((y_test.shape[0], 1, x_test.shape[1]))
y_train.shape















import numpy.random as nr
nr.seed(9922)
labels = np.array(df3)
indx = range(Features.shape[0])
indx = ms.train_test_split(indx, test_size = 0.25)
# print(indx)
x_train = Features[indx[0],:]
y_train = np.ravel(labels[indx[0]])
x_test = Features[indx[1],:]
y_test = np.ravel(labels[indx[1]])

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaler.fit(X_train)
scaled_train_data = scaler.transform(X_train)
scaled_test_data = scaler.transform(y_train.shape)

from sklearn import preprocessing
scaler = preprocessing.StandardScaler().fit(X_train[:,10:])
x_train[:,10:] = scaler.transform(x_train[:,10:])
y_test[:,10:] = scaler.transform(y_test[:,10:])
print(x_train.shape)
x_train[:10,:]